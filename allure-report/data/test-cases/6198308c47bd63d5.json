{"uid":"6198308c47bd63d5","name":"Validate GET /user/{username} fails for invalid usernames","fullName":"src/test/java/features/api/testGetUserEndpoint.feature:8","historyId":"276e4536897d591658343b2cffe55d4","time":{"start":1747656765855,"stop":1747656766598,"duration":743},"status":"failed","statusMessage":"expected [400] but found [405]","statusTrace":"java.lang.AssertionError: expected [400] but found [405]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat org.testng.asserts.Assertion$27.doAssert(Assertion.java:348)\n\tat org.testng.asserts.Assertion.executeAssert(Assertion.java:25)\n\tat org.testng.asserts.Assertion.doAssert(Assertion.java:12)\n\tat org.testng.asserts.Assertion.assertEquals(Assertion.java:344)\n\tat utiltites.assertions.Assert.responseStatusCodeEquals(Assert.java:350)\n\tat pages.api.status_code_assertions.StatusCodeAssertions.apiResponseStatusCodeShouldBeSC_BAD_REQUEST(StatusCodeAssertions.java:29)\n\tat steps.api.status_code_assertions.StatusCodeAssertions_StepDef.apiResponseStatusCodeShouldBeSC_BAD_REQUEST(StatusCodeAssertions_StepDef.java:31)\n\tat ✽.API response status code should be SC_BAD_REQUEST.(file:///Users/amr.elgarhy/Documents/GitHub/Q-Pros/src/test/java/features/api/testGetUserEndpoint.feature:10)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":12,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected [400] but found [405]","statusTrace":"java.lang.AssertionError: expected [400] but found [405]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat org.testng.asserts.Assertion$27.doAssert(Assertion.java:348)\n\tat org.testng.asserts.Assertion.executeAssert(Assertion.java:25)\n\tat org.testng.asserts.Assertion.doAssert(Assertion.java:12)\n\tat org.testng.asserts.Assertion.assertEquals(Assertion.java:344)\n\tat utiltites.assertions.Assert.responseStatusCodeEquals(Assert.java:350)\n\tat pages.api.status_code_assertions.StatusCodeAssertions.apiResponseStatusCodeShouldBeSC_BAD_REQUEST(StatusCodeAssertions.java:29)\n\tat steps.api.status_code_assertions.StatusCodeAssertions_StepDef.apiResponseStatusCodeShouldBeSC_BAD_REQUEST(StatusCodeAssertions_StepDef.java:31)\n\tat ✽.API response status code should be SC_BAD_REQUEST.(file:///Users/amr.elgarhy/Documents/GitHub/Q-Pros/src/test/java/features/api/testGetUserEndpoint.feature:10)\n","steps":[{"name":"When the user sends a GET request to invalid username","time":{"start":1747656765855,"stop":1747656766596,"duration":741},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Then API response status code should be SC_BAD_REQUEST.","time":{"start":1747656766596,"stop":1747656766597,"duration":1},"status":"failed","statusMessage":"expected [400] but found [405]","statusTrace":"java.lang.AssertionError: expected [400] but found [405]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1578)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1419)\n\tat org.testng.Assert.assertEquals(Assert.java:1383)\n\tat org.testng.Assert.assertEquals(Assert.java:1429)\n\tat org.testng.asserts.Assertion$27.doAssert(Assertion.java:348)\n\tat org.testng.asserts.Assertion.executeAssert(Assertion.java:25)\n\tat org.testng.asserts.Assertion.doAssert(Assertion.java:12)\n\tat org.testng.asserts.Assertion.assertEquals(Assertion.java:344)\n\tat utiltites.assertions.Assert.responseStatusCodeEquals(Assert.java:350)\n\tat pages.api.status_code_assertions.StatusCodeAssertions.apiResponseStatusCodeShouldBeSC_BAD_REQUEST(StatusCodeAssertions.java:29)\n\tat steps.api.status_code_assertions.StatusCodeAssertions_StepDef.apiResponseStatusCodeShouldBeSC_BAD_REQUEST(StatusCodeAssertions_StepDef.java:31)\n\tat ✽.API response status code should be SC_BAD_REQUEST.(file:///Users/amr.elgarhy/Documents/GitHub/Q-Pros/src/test/java/features/api/testGetUserEndpoint.feature:10)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"Regression"},{"name":"tag","value":"API_Regression"},{"name":"host","value":"E1611833"},{"name":"thread","value":"61278@E1611833.main(1)"},{"name":"feature","value":"Test Get User/Endpoint operation on Petstore API"},{"name":"story","value":"Validate GET /user/{username} fails for invalid usernames"},{"name":"suite","value":"Test Get User/Endpoint operation on Petstore API"},{"name":"testClass","value":"Validate GET /user/{username} fails for invalid usernames"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///Users/amr.elgarhy/Documents/GitHub/Q-Pros/src/test/java/features/api/testGetUserEndpoint.feature"},{"name":"package","value":"src.test.java.features.api.testGetUserEndpoint_feature.Test Get User/Endpoint operation on Petstore API"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ff28234fc28ab9fb","status":"failed","statusDetails":"expected [400] but found [405]","time":{"start":1747656733758,"stop":1747656734716,"duration":958}},{"uid":"27cb027e5a216089","status":"failed","statusDetails":"expected [400] but found [405]","time":{"start":1747650598184,"stop":1747650599163,"duration":979}},{"uid":"57150897328a5b3","status":"failed","statusDetails":"expected [400] but found [405]","time":{"start":1747606960806,"stop":1747606961782,"duration":976}},{"uid":"f4e01239994e5122","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1747606893694,"stop":1747606894652,"duration":958}},{"uid":"8080e417933a8107","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1747606816031,"stop":1747606817007,"duration":976}},{"uid":"87c3d02f0d5261ee","status":"failed","statusDetails":"expected [400] but found [405]","time":{"start":1747606529795,"stop":1747606530751,"duration":956}},{"uid":"b812b1f459d06db5","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <200> but was <405>.\n","time":{"start":1747606480504,"stop":1747606481533,"duration":1029}},{"uid":"5dcea0e87b6a1e86","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <200> but was <405>.\n","time":{"start":1747606411758,"stop":1747606412749,"duration":991}},{"uid":"61aa0e9f90cdee7c","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <200> but was <405>.\n","time":{"start":1747606276155,"stop":1747606277151,"duration":996}},{"uid":"f603cfcbfd63de52","status":"broken","statusDetails":"java.lang.ExceptionInInitializerError","time":{"start":1747606141334,"stop":1747606141339,"duration":5}},{"uid":"dc02f91116dbf32b","status":"broken","statusDetails":"java.lang.ExceptionInInitializerError","time":{"start":1747606095097,"stop":1747606095100,"duration":3}},{"uid":"8b88cee694bf76e1","status":"broken","statusDetails":"java.lang.ExceptionInInitializerError","time":{"start":1747605907077,"stop":1747605907080,"duration":3}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["API_Regression","Regression"]},"source":"6198308c47bd63d5.json","parameterValues":[]}